{"version":3,"sources":["logic.js","components/Draw.js","components/ColorPicker.js","components/Rules.js","utils.js","samples.js","App.js","serviceWorker.js","index.js"],"names":["ctx","canvas","state","stepConst","speedConst","steps","grid","c","rescale","initGrid","x","Math","floor","width","y","height","d","i","j","go","clearRect","color","fillStyle","size","fillRect","redrawGrid","running","document","getElementById","innerHTML","currentCellColor","currentIndex","rules","findIndex","rule","nextIndex","length","newColor","dir","setTimeout","reset","updateState","_state","speed","pow","Draw","resetCanvas","_this","_canvas","this","refs","props","getContext","react_default","a","createElement","Segment","className","ref","Button","basic","onClick","toggleRunning","type","id","value","name","min","max","onChange","changeSpeed","htmlFor","changeSize","Component","ColorPicker","displayColorPicker","handleClick","setState","handleClose","handleChange","changeColor","index","styles","reactCSS","default","borderRadius","background","concat","r","g","b","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","style","react_color_lib","React","Rules","Card","Content","map","key","disabled","icon","deleteRule","Icon","components_ColorPicker","hex","parseInt","slice","toggle","addRule","getRandomColor","random","toString","getLeftOrRight","samples","original","symmetric","weirdSquare","weirdHighway","filledTriangle","App","NUM_RULES","makeRules","push","findRuleByColor","filter","Object","toConsumableArray","splice","event","target","handleItemClick","e","_ref","sample","sampleRule","split","sampleRules","Menu","text","Item","header","Grid","columns","stackable","Row","stretched","Column","components_Draw","src_components_Rules","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.601bd93f.chunk.js","sourcesContent":["\nlet ctx;\nlet canvas;\nconst width = 500;\nconst height = 500;\nlet steps = 0;\nconst grid = [];\nlet state;\nlet c = {};\nlet stepConst;\nlet speedConst;\nlet rescale = false;\n\nconst initGrid = () => {\n  c = {\n    x: Math.floor(width / 2),\n    y: Math.floor(height / 2),\n    d: \"up\"\n  };\n  for (let i = 0; i < height; i++) {\n    grid[i] = [];\n    for (let j = 0; j < height; j++) {\n      grid[i][j] = \"#ffffff\";\n    }\n  }\n};\n\nconst findIndexByColor = color => {\n  return state.rules.findIndex(rule => rule.color === color);\n}\n\nconst redrawGrid = () => {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  for (let i = 0; i < height; i++) {\n    for (let j = 0; j < height; j++) {\n      const color = grid[i][j];\n      if (color !== \"#ffffff\") {\n        ctx.fillStyle = color; \n        const x = i * state.size - (width * state.size - width)/2;\n        const y = j * state.size - (width * state.size - width)/2;\n        ctx.fillRect(x, y, state.size, state.size);\n      }\n    }\n  }\n\n}\n\nconst go = () => {\n  if (rescale) {\n    redrawGrid();\n    rescale = false;\n  }\n  if (!state.running) return;\n  if (steps > 10000000) return;\n  if (!grid[c.x] || !grid[c.x][c.y]) return;\n  steps++;\n  document.getElementById(\"steps\").innerHTML = steps;\n  // console.log(steps);\n  const currentCellColor = grid[c.x][c.y];\n  const currentIndex = findIndexByColor(currentCellColor);\n  const nextIndex = (currentIndex+1)%state.rules.length\n  const newColor = state.rules[nextIndex].color;\n  grid[c.x][c.y] = newColor;\n  const dir = state.rules[currentIndex].dir;\n  ctx.fillStyle = newColor;\n  const x = c.x * state.size - (width * state.size - width)/2;\n  const y = c.y * state.size - (width * state.size - width)/2;\n  ctx.fillRect(x, y, state.size, state.size);\n  if (c.d === \"up\") {\n    if (dir === \"left\") {\n      c.x--;\n      c.d = \"left\";\n    } else {\n      c.x++;\n      c.d = \"right\";\n    }\n  } else if (c.d === \"down\") {\n    if (dir === \"left\") {\n      c.x++;\n      c.d = \"right\";\n    } else {\n      c.x--;\n      c.d = \"left\";\n    }\n  } else if (c.d === \"left\") {\n    if (dir === \"left\") {\n      c.y++;\n      c.d = \"down\";\n    } else {\n      c.y--;\n      c.d = \"up\";\n    }\n  } else {\n    if (dir === \"left\") {\n      c.y--;\n      c.d = \"up\";\n    } else {\n      c.y++;\n      c.d = \"down\";\n    }\n  }\n\n  \n  if (steps % stepConst === 0) {\n    setTimeout(go, speedConst);\n  } else {\n    go();\n  }\n  \n};\n\nconst updateSpeedConsts = () => {\n  if (state.speed > 6) {\n    stepConst = Math.pow(10, state.speed - 7);\n  } else {\n    stepConst = 1;\n    speedConst = Math.pow(5, 6 - state.speed);\n  }\n  \n}\n\nconst reset = () => {\n  // state.running = false;\n  steps = 0;\n  initGrid();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  c = {\n    x: Math.floor(width / 2),\n    y: Math.floor(height / 2),\n    d: \"up\"\n  };\n}\n\nconst updateState = (_state) => {\n  if (state.size !== _state.size) rescale = true;\n  state = _state;\n  updateSpeedConsts();\n  if (state.running) go();\n}\n\n// drawGrid();\nconst start = (_state, _canvas) => {\n  ctx = _canvas.getContext(\"2d\");\n  state = _state;\n  canvas = _canvas;\n  initGrid();\n  go();\n}\n\nexport { start, reset, updateState };","import React, { Component } from \"react\";\nimport { start, reset, updateState } from \"../logic\";\nimport { Button, Segment } from 'semantic-ui-react'\n\nclass Draw extends Component {\n  componentDidMount() {\n    this.canvas = this.refs.canvas;\n    start(this.props.state, this.canvas);\n  }\n\n  componentDidUpdate() {\n    updateState(this.props.state);\n  }\n\n  resetCanvas = () => {\n    reset(this.canvas);\n  };\n\n  render() {\n    return (\n      <Segment className=\"grid-card\">\n        <div className=\"Grid\">\n          <canvas ref=\"canvas\" width=\"500\" height=\"500\" />\n        </div>\n        <div className=\"interaction\">\n          <div className=\"buttons\">\n            <Button basic color=\"green\" onClick={this.props.toggleRunning}>\n              {this.props.state.running ? \"Stop\" : \"Start\"}\n            </Button>\n            <Button basic color=\"purple\" onClick={this.resetCanvas}>Reset</Button>\n          </div>\n          <div className=\"sliders\">\n            <input\n              type=\"range\"\n              id=\"speed\"\n              value={this.props.state.speed}\n              name=\"speed\"\n              min=\"1\"\n              max=\"10\"\n              onChange={this.props.changeSpeed}\n            />\n            <label htmlFor=\"volume\">Speed: {this.props.state.speed}</label>\n            <input\n              type=\"range\"\n              id=\"size\"\n              value={this.props.state.size}\n              name=\"size\"\n              min=\"1\"\n              max=\"10\"\n              onChange={this.props.changeSize}\n            />\n            <label htmlFor=\"volume\">Zoom: {this.props.state.size}</label>\n          </div>\n          <div className=\"steps\">\n            <div>\n              steps:\n              <span id=\"steps\" />\n            </div>\n          </div>\n        </div>\n      </Segment>\n    );\n  }\n}\n\nexport default Draw;\n","import React from 'react'\nimport reactCSS from 'reactcss'\nimport { SketchPicker } from 'react-color'\n\nclass ColorPicker extends React.Component {\n  state = {\n    displayColorPicker: false,\n  };\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false })\n  };\n\n  handleChange = (color) => {\n    this.props.changeColor(this.props.index, color);\n  };\n\n  render() {\n\n    const styles = reactCSS({\n      'default': {\n        color: {\n          width: '36px',\n          height: '14px',\n          borderRadius: '2px',\n          background: `rgba(${ this.props.color.r }, ${ this.props.color.g }, ${ this.props.color.b }, ${ this.props.color.a })`,\n        },\n        swatch: {\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2',\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n      },\n    });\n\n    return (\n      <div>\n        <div style={ styles.swatch } onClick={ this.handleClick }>\n          <div style={ styles.color } />\n        </div>\n        { this.state.displayColorPicker ? <div style={ styles.popover }>\n          <div style={ styles.cover } onClick={ this.handleClose }/>\n          <SketchPicker color={ this.props.color } onChange={ this.handleChange } />\n        </div> : null }\n\n      </div>\n    )\n  }\n}\n\nexport default ColorPicker","import React from \"react\";\nimport ColorPicker from \"./ColorPicker\";\nimport \"./Rules.css\";\nimport { Card, Button, Segment, Icon } from \"semantic-ui-react\";\n\nconst Rules = props => {\n  const hexToRGB = hex => {\n    var r = parseInt(hex.slice(1, 3), 16),\n      g = parseInt(hex.slice(3, 5), 16),\n      b = parseInt(hex.slice(5, 7), 16),\n      a = 1;\n\n    return { r, g, b, a };\n  };\n\n  return (\n    <Segment className=\"rules\">\n      <Card.Content>\n        {props.rules.map((rule, index) => (\n          <div className=\"rule-down\">\n            <div className=\"rule\" key={index}>\n              <Button\n                basic\n                disabled={index === 0}\n                color=\"red\"\n                size=\"mini\"\n                icon\n                onClick={() => props.deleteRule(index)}\n              >\n                <Icon name=\"trash\" />\n              </Button>\n              {index === 0 ? (\n                <div className=\"white-box\" />\n              ) : (\n                <ColorPicker\n                  index={index}\n                  changeColor={props.changeColor}\n                  color={hexToRGB(rule.color)}\n                />\n              )}\n              <Button\n                basic\n                color=\"blue\"\n                size=\"mini\"\n                icon\n                onClick={() => props.toggle(index)}\n              >\n                {rule.dir === \"left\" ? (\n                  <Icon name=\"arrow left\" />\n                ) : (\n                  <Icon name=\"arrow right\" />\n                )}\n              </Button>\n            </div>\n            {index < props.rules.length-1 && <Icon key={`down${index}`} name=\"arrow down\" className=\"arrow-down\" />}\n          </div>\n        ))}\n      </Card.Content>\n      <Card.Content className=\"add-button-container\">\n        <Button basic color=\"blue\" id=\"add-rule\" onClick={props.addRule}>\n          Add Rule\n        </Button>\n      </Card.Content>\n    </Segment>\n  );\n};\n\nexport default Rules;\n","export function getRandomColor() {\n  return \"#\" + ((Math.random() * 0xffffff) << 0).toString(16);\n}\n\nexport function getLeftOrRight() {\n  return Math.random() > 0.5 ? \"left\" : \"right\";\n}\n","import { getRandomColor } from \"./utils\";\n\nconst samples = {\n  original: {\n    rules: \"LR\",\n    speed: 7,\n    size: 6\n  },\n  symmetric: {\n    rules: \"LLRR\",\n    speed: 9,\n    size: 4\n  },\n  weirdSquare: {\n    rules: \"LRRRRRLLR\",\n    speed: 10,\n    size: 2\n  },\n  weirdHighway: {\n    rules: \"LLRRRLRLRLLR\",\n    speed: 8,\n    size: 3\n  },\n  filledTriangle: {\n    rules: \"RRLLLRLLLRRR\",\n    speed: 9,\n    size: 2\n  }\n}\n\nexport function sampleRules(sample) {\n  const sampleRule = {\n    running: true\n  }\n\n  sampleRule.rules = samples[sample].rules.split(\"\").map((dir, index) => {\n    return {\n      color: index === 0 ? \"#ffffff\" : getRandomColor(),\n      dir: dir === \"L\" ? \"left\" : \"right\"\n    }\n  });\n\n  sampleRule.speed = samples[sample].speed;\n  sampleRule.size = samples[sample].size;\n\n  return sampleRule;\n\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Draw from \"./components/Draw\";\nimport Rules from \"./components/Rules\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Grid, Menu } from \"semantic-ui-react\";\nimport { getRandomColor, getLeftOrRight } from \"./utils\";\nimport { sampleRules } from \"./samples\";\n\nclass App extends Component {\n  state = {\n    rules: [],\n    running: false,\n    speed: 3,\n    size: 5\n  };\n\n  NUM_RULES = Math.floor(Math.random() * 10) + 1;\n\n  \n\n  makeRules = () => {\n    const rules = [];\n    rules.push({\n      color: \"#ffffff\",\n      dir: getLeftOrRight()\n    });\n\n    for (let i = 0; i < this.NUM_RULES; i++) {\n      rules.push({\n        color: getRandomColor(),\n        dir: getLeftOrRight()\n      });\n    }\n\n    this.setState({ rules });\n  };\n\n  componentDidMount() {\n    this.makeRules();\n  }\n\n  findRuleByColor = color => {\n    return this.state.rules.filter(rule => rule.color === color);\n  };\n\n  deleteRule = index => {\n    let rules = [...this.state.rules];\n    rules.splice(index, 1);\n    this.setState({ rules });\n  };\n\n  addRule = () => {\n    let rules = [...this.state.rules];\n    rules.push({\n      color: getRandomColor(),\n      dir: getLeftOrRight()\n    });\n    this.setState({ rules });\n  };\n\n  toggle = index => {\n    let rules = [...this.state.rules];\n    rules[index].dir === \"left\"\n      ? (rules[index].dir = \"right\")\n      : (rules[index].dir = \"left\");\n    this.setState({ rules });\n  };\n\n  changeColor = (index, color) => {\n    let rules = [...this.state.rules];\n    rules[index].color = color.hex;\n    this.setState({ rules });\n  };\n\n  changeSpeed = event => {\n    this.setState({ speed: event.target.value });\n  };\n\n  changeSize = event => {\n    this.setState({ size: event.target.value });\n  };\n\n  toggleRunning = () => {\n    this.setState({ running: !this.state.running });\n  };\n\n  handleItemClick = (e, { name }) => {\n    this.setState(sampleRules(name));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Menu text>\n          <Menu.Item header>Langton's Ant</Menu.Item>\n          <Menu.Item name=\"original\" onClick={this.handleItemClick} />\n          <Menu.Item name=\"symmetric\" onClick={this.handleItemClick} />\n          <Menu.Item name=\"weirdSquare\" onClick={this.handleItemClick} />\n          <Menu.Item name=\"weirdHighway\" onClick={this.handleItemClick} />\n          <Menu.Item name=\"filledTriangle\" onClick={this.handleItemClick} />\n        </Menu>\n        <Grid columns={2} stackable className=\"fill-content\">\n          <Grid.Row stretched>\n            <Grid.Column width={9}>\n              <Draw\n                state={this.state}\n                changeSize={this.changeSize}\n                changeSpeed={this.changeSpeed}\n                toggleRunning={this.toggleRunning}\n              />\n            </Grid.Column>\n            <Grid.Column width={2} />\n            <Grid.Column width={5}>\n              <Rules\n                toggle={this.toggle}\n                changeColor={this.changeColor}\n                toggleRunning={this.toggleRunning}\n                addRule={this.addRule}\n                deleteRule={this.deleteRule}\n                rules={this.state.rules}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}